{"version":3,"sources":["components/navbar.jsx","App.js","index.js"],"names":["NavBar","this","props","onRun","onReset","className","onClick","id","value","Component","App","handleRun","state","running","graph","slice","animations","document","getElementById","selectionSort","bubbleSort","insertionSort","mergeSort","length","console","log","push","type","k","runAnimations","setState","handleReset","j","randNum","Math","floor","random","clearTimeouts","resetColor","timeouts","forEach","clearTimeout","animation","timer","timerID","ms","setTimeout","first","second","color","style","backgroundColor","COLORDEFAULT","COLORCOMPARE","addTimeoutID","width","width2","toString","width1","i","COLORSORTED","last","maxValue","min","index","temp","startIndex","endIndex","graphToSort","middleIndex","mergeHelper","leftIndex","originalIndex","rightIndex","array1Size","array2Size","left","Array","right","leftCounter","rightCounter","size","display","percent","height","Fragment","ReactDOM","render","StrictMode"],"mappings":"kQAoBeA,E,4JAlBX,WACI,MAAwBC,KAAKC,MAAtBC,EAAP,EAAOA,MAAMC,EAAb,EAAaA,QACb,OACI,sBAAKC,UAAU,+CAAf,UACQ,wBAAQC,QAASF,EAASC,UAAU,4BAApC,yBACA,mBAAGA,UAAU,kBAAb,gCACA,yBAAQE,GAAG,YAAYF,UAAU,OAAjC,UACI,wBAAQG,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,sBAEJ,wBAAQF,QAASH,EAAOE,UAAU,uBAAlC,wB,GAbCI,aCIfC,G,8DAKJ,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IAmBRS,UAAY,WAEV,IAAwB,IAArB,EAAKC,MAAMC,QAAd,CACA,IAAMC,EAAQ,EAAKF,MAAME,MAAMC,QAE3BC,EAAa,GACjB,OAFkBC,SAASC,eAAe,aAAaV,OAGrD,IAAK,YACHQ,EAAa,EAAKG,cAAcL,GAChC,MACF,IAAK,SACHE,EAAa,EAAKI,WAAWN,GAC7B,MAEF,IAAK,YACHE,EAAa,EAAKK,cAAcP,GAChC,MAEF,IAAK,QACH,EAAKQ,UAAU,EAAER,EAAMS,OAAO,EAAET,EAAME,GACtCQ,QAAQC,IAAIX,GACZU,QAAQC,IAAIT,GACZA,EAAWU,KAAK,CAACC,KAAK,SAM1B,IAAI,IAAIC,EAAE,EAAEA,EAAEZ,EAAWO,OAAOK,IAAK,EAAKC,cAAcb,EAAWY,GAAGA,GACtE,EAAKE,SAAS,CAACjB,SAAQ,MAjDP,EAsOlBkB,YAAc,WAGZ,IAFA,IAAMjB,EAAQ,GAENkB,EAAI,EAAGA,EADA,IACcA,IAAI,CAC/B,IAAIC,EAAUC,KAAKC,MAFN,IAEYD,KAAKE,SAAoB,GAClDtB,EAAMY,KAAKO,GAEb,EAAKI,gBACL,EAAKP,SAAS,CAAChB,QAAMD,SAAQ,GAAO,EAAKyB,eA5OzC,EAAK1B,MAAQ,CAACE,MAAM,GAAGD,SAAQ,GAC/B,EAAK0B,SAAS,GAHE,E,qDAMlB,WACEtC,KAAKsC,SAAW,GAChBtC,KAAK8B,gB,0BAGP,SAAaxB,GACXN,KAAKsC,SAASb,KAAKnB,K,2BAGrB,WACEN,KAAKsC,SAASC,QAAQC,cACtBxC,KAAKsC,SAAW,K,2BAoClB,SAAcG,EAAUC,GAAO,IAGzBC,EAHwB,OACxBjB,EAAOe,EAAUf,KACfkB,EAAKnC,EAAImC,GAEf,OAAOlB,GACL,IAAK,UACHiB,EAAUE,YAAW,WACnB,IAAMC,EAAQ9B,SAASC,eAAewB,EAAUK,OAC1CC,EAAQ/B,SAASC,eAAewB,EAAUM,QAE1CC,EADaF,EAAMG,MAAMC,kBACAzC,EAAI0C,aAAe1C,EAAI2C,aAAe3C,EAAI0C,aACzEL,EAAMG,MAAMC,gBAAkBF,EAC9BD,EAAOE,MAAMC,gBAAkBF,IAC/BN,EAAME,GACR5C,KAAKqD,aAAaV,GAClB,MAEF,IAAK,OACJA,EAAUE,YAAW,WAClB,IAAMC,EAAQ9B,SAASC,eAAewB,EAAUK,OAC1CC,EAAS/B,SAASC,eAAewB,EAAUM,QACjDD,EAAMG,MAAMK,MAAQb,EAAUc,OAAOC,WAAW,IAChDT,EAAOE,MAAMK,MAAQb,EAAUgB,OAAOD,WAAW,MACjDd,EAAME,GACR5C,KAAKqD,aAAaV,GAClB,MACF,IAAK,OACHA,EAAUE,YAAW,WACnB,IAAI,IAAIa,EAAI,EAAGA,EAAI,EAAK/C,MAAME,MAAMS,OAAQoC,IAAI,CAChC1C,SAASC,eAAeyC,GAChCT,MAAMC,gBAAkBzC,EAAIkD,eAEpCjB,EAAME,GACR5C,KAAKqD,aAAaV,GAClB,MAEF,IAAK,MACDA,EAAUE,YAAW,WACrB,IAAMe,EAAO5C,SAASC,eAAewB,EAAUmB,MAC/CA,EAAKX,MAAMK,MAAQb,EAAUoB,SAASL,WAAW,IACjDI,EAAKX,MAAMC,gBAAkBzC,EAAIkD,cACnCjB,EAAME,GACN5C,KAAKqD,aAAaV,M,2BASxB,SAAc9B,GAEZ,IADA,IAAME,EAAa,GACX2C,EAAE,EAAGA,EAAE7C,EAAMS,OAAQoC,IAAI,CAC/B,IAAII,EAAMjD,EAAM6C,GACZK,EAAQL,EACZ3C,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMiB,EAAMhB,OAAOgB,IACnD,IAAI,IAAIhC,EAAE2B,EAAE,EAAG3B,EAAElB,EAAMS,OAAOS,IAC5BhB,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,IAC5ClB,EAAMkB,GAAK+B,GACZ/C,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMiB,EAAMhB,OAAOgB,IACnDA,EAAMhC,EACN+B,EAAMjD,EAAMkB,IAEThB,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,IAEtDhB,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMY,EAAEX,OAAOgB,EAAMN,OAAOK,EAAIP,OAAO1C,EAAMkD,KAC1ElD,EAAMkD,GAAOlD,EAAM6C,GACnB7C,EAAM6C,GAAGI,EACT/C,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMiB,EAAMhB,OAAOgB,IACnDhD,EAAWU,KAAK,CAACC,KAAK,MAAMkC,KAAKF,EAAEG,SAASC,IAG9C,OAAO/C,I,wBAGT,SAAWF,GAET,IADA,IAAME,EAAa,GACX2C,EAAE,EAAGA,EAAE7C,EAAMS,OAAO,EAAGoC,IAAI,CAGjC,IAFA,IAAIE,EAAO/C,EAAMS,OAAO,EACpBuC,EAAWhD,EAAMA,EAAMS,OAAO,GAC1BS,EAAE,EAAGA,EAAElB,EAAMS,OAAOoC,EAAE,EAAE3B,IAAI,CAElC,GADAhB,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,EAAE,IAC7ClB,EAAMkB,GAAGlB,EAAMkB,EAAE,GAAG,CACtBhB,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMf,EAAEgB,OAAOhB,EAAE,EAAG0B,OAAO5C,EAAMkB,GAAGwB,OAAO1C,EAAMkB,EAAE,KAChF,IAAIiC,EAAOnD,EAAMkB,GACjBlB,EAAMkB,GAAKlB,EAAMkB,EAAE,GACnBlB,EAAMkB,EAAE,GAAKiC,EAEfjD,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,EAAE,IACjD6B,EAAO7B,EAAE,EACT8B,EAAWhD,EAAMkB,EAAE,GAGrBhB,EAAWU,KAAK,CAACC,KAAK,MAAMkC,KAAKA,EAAKC,SAASA,IAGjD,OADA9C,EAAWU,KAAK,CAACC,KAAK,MAAMkC,KAAK,EAAEC,SAAShD,EAAM,KAC3CE,I,2BAGT,SAAcF,GAEZ,IADA,IAAME,EAAa,GACX2C,EAAE,EAAGA,EAAE7C,EAAMS,OAAOoC,IAAI,CAC9B,IAAInD,EAAQM,EAAM6C,GACd3B,EAAI2B,EAAI,EAEZ,IADA3C,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMY,EAAEX,OAAOW,IACzC3B,GAAG,GAAKlB,EAAMkB,GAAGxB,GACrBQ,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,IAC/ChB,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMf,EAAE,EAAEgB,OAAOhB,EAAE,EAAE0B,OAAO5C,EAAMkB,GAAGwB,OAAO1C,EAAMkB,KAC/EhB,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMf,EAAEgB,OAAOhB,IAC/ClB,EAAMkB,EAAE,GAAKlB,EAAMkB,GACnBA,GAAI,EAENhB,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMf,EAAE,EAAEgB,OAAOhB,EAAE,EAAE0B,OAAOlD,EAAMgD,OAAOhD,IACtEM,EAAMkB,EAAE,GAAKxB,EACbQ,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMY,EAAEX,OAAOW,IAIjD,OADA3C,EAAWU,KAAK,CAACC,KAAK,SACfX,I,uBAGT,SAAUkD,EAAWC,EAASC,EAAYpD,GACxC,KAAIkD,GAAcC,GAAlB,CACA,IAAME,EAAcnC,KAAKC,OAAO+B,EAAWC,GAAU,GACrDlE,KAAKqB,UAAU4C,EAAWG,EAAYD,EAAYpD,GAClDf,KAAKqB,UAAU+C,EAAY,EAAEF,EAASC,EAAYpD,GAClDf,KAAKqE,YAAYJ,EAAWG,EAAYF,EAASC,EAAYpD,M,yBAG/D,SAAYkD,EAAWG,EAAYF,EAASC,EAAYpD,GAStD,IARA,IAAIuD,EAAYL,EACZM,EAAgBN,EAChBO,EAAaJ,EAAY,EACzBK,EAAaL,EAAcE,EAAY,EACvCI,EAAaR,EAAWE,EACxBO,EAAO,IAAIC,MAAMH,GACjBI,EAAQ,IAAID,MAAMF,GAEbhB,EAAI,EAAGA,EAAEe,EAAYf,IAC5BiB,EAAKjB,GAAKS,EAAYG,EAAYZ,GACpC,IAAK,IAAI3B,EAAI,EAAGA,EAAE2C,EAAY3C,IAC7B8C,EAAM9C,GAAKoC,EAAYC,EAAc,EAAIrC,GAI1C,IAFA,IAAI+C,EAAc,EACdC,EAAe,EACbD,EAAaL,GAAcM,EAAaL,GAC1C3D,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMwB,EAAUvB,OAAOyB,IACvDzD,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMwB,EAAUvB,OAAOyB,IACpDG,EAAKG,IAAeD,EAAME,IAC3BhE,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMyB,EAAcxB,OAAOwB,EAAcd,OAAOkB,EAAKG,GAAavB,OAAOY,EAAYI,KAClHJ,EAAYI,KAAmBI,EAAKG,KACpCR,MAGAvD,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMyB,EAAcxB,OAAOwB,EAAcd,OAAOoB,EAAME,GAAcxB,OAAOY,EAAYI,KACpHJ,EAAYI,KAAmBM,EAAME,KACrCP,KAIN,KAAMM,EAAYL,GAChB1D,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMwB,EAAUvB,OAAOuB,IACvDvD,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAMwB,EAAUvB,OAAOuB,IACvDvD,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMyB,EAAcxB,OAAOwB,EAAcd,OAAOkB,EAAKG,GAAavB,OAAOY,EAAYI,KAClHJ,EAAYI,KAAmBI,EAAKG,KACpCR,IAEF,KAAMS,EAAaL,GACjB3D,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAM0B,EAAWzB,OAAOyB,IACxDzD,EAAWU,KAAK,CAACC,KAAK,UAAUoB,MAAM0B,EAAWzB,OAAOyB,IACxDzD,EAAWU,KAAK,CAACC,KAAK,OAAOoB,MAAMyB,EAAcxB,OAAOwB,EAAcd,OAAOoB,EAAME,GAAcxB,OAAOY,EAAYI,KAClHJ,EAAYI,KAAmBM,EAAME,KACrCP,M,wBAeN,WACE,IAAI,IAAId,EAAI,EAAGA,EAAE1D,KAAKW,MAAME,MAAMS,OAAQoC,IACxC1C,SAASC,eAAeyC,GAAGT,MAAMC,gBAAgBzC,EAAI0C,e,oBAIzD,WAIA,IAHA,IAAM6B,EAAOhF,KAAKW,MAAME,MAAMS,OACxBT,EAAK,YAAOb,KAAKW,MAAME,OACvBoE,EAAU,GACRvB,EAAE,EAAGA,EAAEsB,EAAMtB,IAAI,CACvB,IACIwB,EADQrE,EAAM6C,GACEF,WAAW,IAC3BR,EAAQvC,EAAI0C,aAChB8B,EAAQxD,KAAK,qBAAanB,GAAIoD,EAAGtD,UAAU,OAAM6C,MAAO,CAACK,MAAM4B,EAAQC,OAAO,MAAMjC,gBAAgBF,IAA7EU,IAEzB,OACE,eAAC,IAAM0B,SAAP,WACE,cAAC,EAAD,CAAQlF,MAAOF,KAAKU,UAAWP,QAASH,KAAK8B,cAC7C,qBAAK1B,UAAU,gBAAf,SACG6E,IAEH,qBAAI7E,UAAU,YAAd,qBAEE,qBAAKA,UAAU,mBAFjB,UAIE,qBAAKA,UAAU,mBAJjB,SAME,qBAAKA,UAAU,4B,GAlRLI,cAAZC,EACG0C,aAAe,cADlB1C,EAEG2C,aAAe,YAFlB3C,EAGGkD,YAAc,YAHjBlD,EAIGmC,GAAK,EAoRCnC,QCxRf4E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvE,SAASC,eAAe,W","file":"static/js/main.e351c101.chunk.js","sourcesContent":["import React, {Component} from 'react'\nclass NavBar extends Component {\n    render(){\n        const {onRun,onReset} = this.props;\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-light bg-dark\">\n                    <button onClick={onReset} className=\"btn btn-light btn-sm mr-5\">Reset Array</button>\n                    <p className=\"mr-2 text-light\">Sorting Algorithm:</p>\n                    <select id=\"algorithm\" className=\"mr-2\">\n                        <option value=\"bubble\">Bubble</option>\n                        <option value=\"insertion\">Insertion</option>\n                        <option value=\"selection\">Selection</option>\n                        <option value=\"merge\">Merge</option>\n                    </select>\n                    <button onClick={onRun} className=\"btn btn-light btn-sm\">Run</button>\n            </nav>\n        );\n    }\n}\n \nexport default NavBar;","import React,{Component} from \"react\";\nimport NavBar from './components/navbar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component{\n  static COLORDEFAULT = 'deepskyblue';\n  static COLORCOMPARE = 'lightcyan';\n  static COLORSORTED = 'lawngreen';\n  static ms = 5;\n  constructor(props){\n    super(props);\n    this.state = {graph:[],running:false}\n    this.timeouts=[];\n  }\n\n  componentDidMount(){\n    this.timeouts = [];\n    this.handleReset();\n  }\n\n  addTimeoutID(id){\n    this.timeouts.push(id);\n  }\n\n  clearTimeouts(){\n    this.timeouts.forEach(clearTimeout);\n    this.timeouts = [];\n  }\n\n  handleRun = () => {\n    //animations: swap, compare, min/normmalize prev\n    if(this.state.running===true){return;}\n    const graph = this.state.graph.slice();\n    const algorithm = document.getElementById(\"algorithm\").value;\n    var animations = [];\n    switch(algorithm){\n      case \"selection\":\n        animations = this.selectionSort(graph);\n        break;\n      case \"bubble\":\n        animations = this.bubbleSort(graph);\n        break;\n      \n      case \"insertion\":\n        animations = this.insertionSort(graph);\n        break;\n\n      case \"merge\":\n        this.mergeSort(0,graph.length-1,graph,animations);\n        console.log(graph)\n        console.log(animations);\n        animations.push({type:\"done\"});\n        break;\n\n      default:\n        break;\n    }\n    for(let k=0;k<animations.length;k++){this.runAnimations(animations[k],k);}\n    this.setState({running:true})\n\n  }\n\n  runAnimations(animation,timer){\n    let type = animation.type;\n    const ms = App.ms;\n    var timerID;\n    switch(type){\n      case \"compare\":\n        timerID = setTimeout(() => {\n          const first = document.getElementById(animation.first);\n          const second= document.getElementById(animation.second);\n          var colorInitial = first.style.backgroundColor;\n          const color = colorInitial === App.COLORDEFAULT ? App.COLORCOMPARE : App.COLORDEFAULT;\n          first.style.backgroundColor = color;\n          second.style.backgroundColor = color;\n        },timer*ms)\n        this.addTimeoutID(timerID);\n        break;\n\n      case \"swap\":\n       timerID = setTimeout(() => {\n          const first = document.getElementById(animation.first);\n          const second = document.getElementById(animation.second);\n          first.style.width = animation.width2.toString()+\"%\";\n          second.style.width = animation.width1.toString()+\"%\";\n        },timer*ms)\n        this.addTimeoutID(timerID);\n        break;\n      case \"done\":\n        timerID = setTimeout(() => {\n          for(let i = 0; i < this.state.graph.length; i++){\n            const index = document.getElementById(i);\n            index.style.backgroundColor = App.COLORSORTED;\n          }\n        },timer*ms)\n        this.addTimeoutID(timerID);\n        break;\n\n      case \"max\":\n          timerID = setTimeout(() => {\n          const last = document.getElementById(animation.last);\n          last.style.width = animation.maxValue.toString()+\"%\";\n          last.style.backgroundColor = App.COLORSORTED;\n      },timer*ms)\n        this.addTimeoutID(timerID);\n        break;\n\n        default:\n          break;\n    }\n\n  }\n\n  selectionSort(graph){\n    const animations = [];\n    for(let i=0; i<graph.length; i++){\n      var min = graph[i];\n      var index = i;\n      animations.push({type:\"compare\",first:index,second:index})\n      for(let j=i+1; j<graph.length;j++){\n        animations.push({type:\"compare\",first:j,second:j})\n        if(graph[j] < min){\n          animations.push({type:\"compare\",first:index,second:index})\n          index=j;\n          min = graph[j];\n        }\n        else{animations.push({type:\"compare\",first:j,second:j})}\n      }\n      animations.push({type:\"swap\",first:i,second:index,width1:min,width2:graph[index]})\n      graph[index]=graph[i];\n      graph[i]=min;\n      animations.push({type:\"compare\",first:index,second:index})\n      animations.push({type:\"max\",last:i,maxValue:min});\n\n    }\n    return animations;\n  }\n\n  bubbleSort(graph){\n    const animations = [];\n    for(let i=0; i<graph.length-1; i++){\n      var last = graph.length-1;\n      var maxValue = graph[graph.length-1];\n      for(let j=0; j<graph.length-i-1;j++){\n        animations.push({type:\"compare\",first:j,second:j+1});\n        if (graph[j]>graph[j+1]){\n          animations.push({type:\"swap\",first:j,second:j+1, width1:graph[j],width2:graph[j+1]});\n          let temp = graph[j];\n          graph[j] = graph[j+1];\n          graph[j+1] = temp;\n        }\n        animations.push({type:\"compare\",first:j,second:j+1});\n        last = j+1;\n        maxValue = graph[j+1];\n\n      }\n      animations.push({type:\"max\",last:last,maxValue:maxValue});\n    }\n    animations.push({type:\"max\",last:0,maxValue:graph[0]});\n    return animations;\n  }\n\n  insertionSort(graph){ \n    const animations = [];\n    for(let i=1; i<graph.length;i++){\n      var value = graph[i];\n      var j = i - 1;\n      animations.push({type:\"compare\",first:i,second:i})\n      while(j>=0 && graph[j]>value){\n        animations.push({type:\"compare\",first:j,second:j})\n        animations.push({type:\"swap\",first:j+1,second:j+1,width1:graph[j],width2:graph[j]})\n        animations.push({type:\"compare\",first:j,second:j})\n        graph[j+1] = graph[j];\n        j=j-1\n      }\n      animations.push({type:\"swap\",first:j+1,second:j+1,width1:value,width2:value})\n      graph[j+1] = value;\n      animations.push({type:\"compare\",first:i,second:i})\n      \n    }\n    animations.push({type:\"done\"})\n    return animations;\n  }\n\n  mergeSort(startIndex,endIndex,graphToSort,animations){\n    if (startIndex >= endIndex){return;}\n    const middleIndex = Math.floor((startIndex+endIndex)/2);\n    this.mergeSort(startIndex,middleIndex,graphToSort,animations);\n    this.mergeSort(middleIndex+1,endIndex,graphToSort,animations);\n    this.mergeHelper(startIndex,middleIndex,endIndex,graphToSort,animations);    \n  }\n\n  mergeHelper(startIndex,middleIndex,endIndex,graphToSort,animations){\n    let leftIndex = startIndex;\n    let originalIndex = startIndex;\n    let rightIndex = middleIndex+1\n    var array1Size = middleIndex - leftIndex + 1;\n    var array2Size = endIndex - middleIndex;\n    var left = new Array(array1Size);\n    var right = new Array(array2Size);\n\n    for (var i = 0; i<array1Size; i++) \n      left[i] = graphToSort[leftIndex + i];\n    for (var j = 0; j<array2Size; j++)\n     right[j] = graphToSort[middleIndex + 1 + j];\n\n    var leftCounter = 0;\n    var rightCounter = 0;\n    while(leftCounter< array1Size && rightCounter<array2Size){\n        animations.push({type:\"compare\",first:leftIndex,second:rightIndex})\n        animations.push({type:\"compare\",first:leftIndex,second:rightIndex})\n        if(left[leftCounter]<= right[rightCounter]){\n          animations.push({type:\"swap\",first:originalIndex,second:originalIndex,width1:left[leftCounter],width2:graphToSort[originalIndex]})\n          graphToSort[originalIndex++] = left[leftCounter++];\n          leftIndex++;\n        }\n        else{\n          animations.push({type:\"swap\",first:originalIndex,second:originalIndex,width1:right[rightCounter],width2:graphToSort[originalIndex]})\n          graphToSort[originalIndex++] = right[rightCounter++]; \n          rightIndex++;\n        }\n    }\n\n    while(leftCounter<array1Size){\n      animations.push({type:\"compare\",first:leftIndex,second:leftIndex})\n      animations.push({type:\"compare\",first:leftIndex,second:leftIndex})\n      animations.push({type:\"swap\",first:originalIndex,second:originalIndex,width1:left[leftCounter],width2:graphToSort[originalIndex]})\n      graphToSort[originalIndex++] = left[leftCounter++];\n      leftIndex++;\n    }\n    while(rightCounter<array2Size){\n      animations.push({type:\"compare\",first:rightIndex,second:rightIndex})\n      animations.push({type:\"compare\",first:rightIndex,second:rightIndex})\n      animations.push({type:\"swap\",first:originalIndex,second:originalIndex,width1:right[rightCounter],width2:graphToSort[originalIndex]})\n        graphToSort[originalIndex++] = right[rightCounter++];\n        rightIndex++;\n    }\n  }\n\n  handleReset = () => {\n    const graph = [];\n    var sortSize = 100;\n    for(var j = 0; j < sortSize; j++){\n      var randNum = Math.floor(Math.random()*sortSize + 1);\n      graph.push(randNum);\n    }\n    this.clearTimeouts();\n    this.setState({graph,running:false},this.resetColor());\n  }\n\n  resetColor(){\n    for(var i = 0; i<this.state.graph.length; i++){\n      document.getElementById(i).style.backgroundColor=App.COLORDEFAULT;\n    }\n  }\n\n  render(){\n  const size = this.state.graph.length;\n  const graph = [...this.state.graph]\n  const display = [];\n  for(let i=0; i<size; i++){\n    var value = graph[i];\n    var percent = value.toString()+\"%\";\n    var color = App.COLORDEFAULT;\n    display.push(<div key={i} id={i} className=\"mb-1\"style={{width:percent,height:'6px',backgroundColor:color}}></div>)\n  }\n  return (\n    <React.Fragment>\n      <NavBar onRun={this.handleRun} onReset={this.handleReset}/>\n      <div className=\"w-100 bg-dark\">\n        {display}\n      </div>\n      <h1 className=\"subheader\">\n        Unsorted\n        <div className=\"boxhud default\"></div>\n        Compare\n        <div className=\"boxhud compare\"></div>\n        Sorted\n        <div className=\"boxhud sorted\"></div>\n      </h1>\n    </React.Fragment>\n  );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}